/**
 * @file ld.script
 *
 * This is the linker script for the Xinu kernel on the arm-qemu platform, where
 * QEMU simulates an ARM Versatile Platform/Application Baseboard.  QEMU loads
 * the kernel at address 0x10000 by default (see hw/arm/boot.c in the QEMU
 * source), and the ARM processor starts executing instructions at that address.
 * We place _start, the entry point for Xinu, in a special .init section to
 * ensure it is placed first in the kernel image.
 *
 * Because of this direct jump to address 0x10000, the "ENTRY(_start)" line
 * below does nothing to set the real entry point of the kernel; however, it
 * _is_ needed to specify the entry point to the linker when it is executed with
 * the --gc-sections option, which removes all sections not reachable from the
 * program's entry point.
 *
 * To be safe, we ensure that every section is aligned on a 64-byte (cache line)
 * boundary.
 */
/* Embedded Xinu, Copyright (C) 2014.  All rights reserved. */

ENTRY(_start)

SECTIONS {
    . = 0x10000;
    .init : {
        *(.init .init.*)
    }

    . = ALIGN(64);

    .text : {
        *(.text .text.*)
        *(.rodata .rodata.*)
        _extext = .;
    }

    . = ALIGN(64);

    .data : {
        *(.data .data.*)
    }

    . = ALIGN(64);

    _bss = . ;
    .bss : {
        *(.bss .bss.*)
    }

    . = ALIGN(64);
    _end = .;

    /* Discard comment and note (but not debugging) sections.  Some
     * versions of GNU ld would otherwise automatically place the
     * ".note.gnu.build-id" section before _start!  */
    /DISCARD/ : {
        *(.comment .comment.* .note .note.*)
    }
}
