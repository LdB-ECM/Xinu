/* Configuration - (device configuration specifications)  */
/* Unspecified switches default to ioerr                  */
/*  -i    init          -o    open      -c    close       */
/*  -r    read          -g    getc      -p    putc        */
/*  -w    write         -s    seek      -n    control     */
/*  -intr interrupt     -csr  csr       -irq  irq         */

/* "type" declarations for both real- and pseudo- devices */

/* simple loopback device */
loopback:
	on LOOPBACK -i loopbackInit -o loopbackOpen  -c loopbackClose
	            -r loopbackRead -g loopbackGetc  -p loopbackPutc
	            -w loopbackWrite -n loopbackControl

/* null device */
null:
    on NOTHING  -i ionull       -o ionull        -c ionull
                -r ionull       -g ionull        -p ionull
                -w ionull

/* physical uart (NS16550) device */
uart:
	on HARDWARE -i uartInit     -o ionull        -c ionull
	            -r uartRead     -g uartGetc      -p uartPutc
	            -w uartWrite    -n uartControl
	            -intr uartInterrupt

/* tty pseudo-devices */
tty:
	on SOFTWARE -i ttyInit      -o ttyOpen       -c ttyClose
	            -r ttyRead      -g ttyGetc       -p ttyPutc
	            -w ttyWrite     -n ttyControl

/* FLASH for each flash device */
flash:
    on HARDWARE -i flashInit    -o flashOpen     -c flashClose
                -r flashRead    -w flashWrite    -n flashControl

/* physical Ethernet device */
ether:
	on HARDWARE -i etherInit    -o etherOpen     -c etherClose
	            -r etherRead    -w etherWrite    -n etherControl
	            -intr etherInterrupt

/* simple Ethernet loopback device */
ethloop:
	on ETHLOOP  -i ethloopInit  -o ethloopOpen   -c ethloopClose
	            -r ethloopRead  -w ethloopWrite  -n ethloopControl

/* raw sockets */
raw:
	on SOFTWARE -i rawInit      -o rawOpen       -c rawClose
                -r rawRead      -w rawWrite      -n rawControl

/* udp devices */
udp:
    on NET      -i udpInit      -o udpOpen       -c udpClose
                -r udpRead      -w udpWrite      -n udpControl

/* tcp devices */
tcp:
    on SOFTWARE -i tcpInit      -o tcpOpen       -c tcpClose
                -r tcpRead      -g tcpGetc       -w tcpWrite
                -p tcpPutc      -n tcpControl

/* http pseudo-devices */
http:
        on TCP      -i httpInit     -o httpOpen      -c httpClose
                    -r httpRead     -g httpGetc      -p httpPutc
                    -w httpWrite    -n httpControl

/* telnet devices */
telnet:
    on TCP      -i telnetInit   -o telnetOpen   -c telnetClose
                -r telnetRead   -g telnetGetc   -w telnetWrite
                -p telnetPutc   -n telnetControl
%%

/* Two uart ports on WRT54GL */
SERIAL0   is uart     on HARDWARE csr 0xB8020000 irq 11

DEVNULL   is null     on NOTHING

/* Loopback device */
LOOP0     is loopback on LOOPBACK

/* TTYs for each uart */
TTYLOOP   is tty      on SOFTWARE
CONSOLE   is tty      on SOFTWARE

/* Flash device */
FLASH     is flash    on HARDWARE csr 0xBD000000

/* Physical ethernet raw packet interface */
ETH0      is ether    on HARDWARE csr 0xB9000000 irq 4

/* A Ethernet Loopback device */
ELOOP     is ethloop  on ETHLOOP

/* Raw sockets */
RAW0      is raw      on SOFTWARE
RAW1      is raw      on SOFTWARE

/* Two UDP devices */
UDP0      is udp      on NET
UDP1      is udp      on NET

/* TCP devices */
TCP0      is tcp      on SOFTWARE
TCP1      is tcp      on SOFTWARE
TCP2      is tcp      on SOFTWARE
TCP3      is tcp      on SOFTWARE
TCP4      is tcp      on SOFTWARE
TCP5      is tcp      on SOFTWARE
TCP6      is tcp      on SOFTWARE

/* TELNET */
TELNET0 is telnet on TCP
TELNET1 is telnet on TCP
TELNET2 is telnet on TCP

%%

/* Configuration and Size Constants */

#define LITTLE_ENDIAN 0x1234
#define BIG_ENDIAN    0x4321
#define BYTE_ORDER    BIG_ENDIAN

#define NTHREAD   100           /* number of user threads           */
#define NSEM      100           /* number of semaphores             */
#define NMAILBOX  15            /* number of mailboxes              */
#define RTCLOCK   TRUE          /* now have RTC support             */
#define NETEMU    FALSE         /* Network Emulator support         */
#define NVRAM     TRUE          /* now have nvram support           */
#define SB_BUS    FALSE         /* Silicon Backplane support        */
#define GPIO      FALSE         /* General-purpose I/O (leds)       */
#define IRQ_TIMER IRQ_HW5       /* timer IRQ is wired to hardware 5 */
#define IRQ_ATH_MISC  IRQ_HW4   /* Misc IRQ is wired to hardware 4  */
#define UART_FIFO_LEN   16      /* Seems to be 16 bytes on the 160NL*/
#define UART_CSR_SPACED TRUE    /* Atheros CSRs at 4 byte intervals */
#define USE_TLB   FALSE         /* make use of TLB                  */
#define USE_TAR   FALSE         /* enable data archives             */
#define NPOOL     8             /* number of buffer pools available */
#define POOL_MAX_BUFSIZE 2048   /* max size of a buffer in a pool   */
#define POOL_MIN_BUFSIZE 8      /* min size of a buffer in a pool   */
#define POOL_MAX_NBUFS   8192   /* max number of buffers in a pool  */
